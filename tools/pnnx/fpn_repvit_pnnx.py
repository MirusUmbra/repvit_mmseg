import os
import numpy as np
import tempfile, zipfile
import torch
import torch.nn as nn
import torch.nn.functional as F
try:
    import torchvision
    import torchaudio
except:
    pass

class Model(nn.Module):
    def __init__(self):
        super(Model, self).__init__()

        self.convbn2d_0 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=3, kernel_size=(3,3), out_channels=32, padding=(1,1), padding_mode='zeros', stride=(2,2))
        self.segmentor_backbone_features_0_1 = nn.GELU()
        self.convbn2d_1 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=32, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(2,2))
        self.convbn2d_2 = nn.Conv2d(bias=True, dilation=(1,1), groups=64, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.segmentor_backbone_features_1_token_mixer_0_conv1 = nn.Conv2d(bias=True, dilation=(1,1), groups=64, in_channels=64, kernel_size=(1,1), out_channels=64, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.batchnorm_3 = nn.BatchNorm2d(affine=True, eps=0.000010, num_features=64)
        self.segmentor_backbone_features_1_token_mixer_1_fc1 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(1,1), out_channels=16, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.segmentor_backbone_features_1_token_mixer_1_act = nn.ReLU()
        self.segmentor_backbone_features_1_token_mixer_1_fc2 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=16, kernel_size=(1,1), out_channels=64, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.convbn2d_3 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.segmentor_backbone_features_1_channel_mixer_m_1 = nn.GELU()
        self.convbn2d_4 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(1,1), out_channels=64, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.convbn2d_5 = nn.Conv2d(bias=True, dilation=(1,1), groups=64, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.segmentor_backbone_features_2_token_mixer_0_conv1 = nn.Conv2d(bias=True, dilation=(1,1), groups=64, in_channels=64, kernel_size=(1,1), out_channels=64, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.batchnorm_7 = nn.BatchNorm2d(affine=True, eps=0.000010, num_features=64)
        self.convbn2d_6 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.segmentor_backbone_features_2_channel_mixer_m_1 = nn.GELU()
        self.convbn2d_7 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(1,1), out_channels=64, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.convbn2d_8 = nn.Conv2d(bias=True, dilation=(1,1), groups=64, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.segmentor_backbone_features_3_token_mixer_0_conv1 = nn.Conv2d(bias=True, dilation=(1,1), groups=64, in_channels=64, kernel_size=(1,1), out_channels=64, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.batchnorm_11 = nn.BatchNorm2d(affine=True, eps=0.000010, num_features=64)
        self.convbn2d_9 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.segmentor_backbone_features_3_channel_mixer_m_1 = nn.GELU()
        self.convbn2d_10 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(1,1), out_channels=64, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.convbn2d_11 = nn.Conv2d(bias=True, dilation=(1,1), groups=64, in_channels=64, kernel_size=(3,3), out_channels=64, padding=(1,1), padding_mode='zeros', stride=(2,2))
        self.convbn2d_12 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.convbn2d_13 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.segmentor_backbone_features_4_channel_mixer_m_1 = nn.GELU()
        self.convbn2d_14 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.convbn2d_15 = nn.Conv2d(bias=True, dilation=(1,1), groups=128, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.segmentor_backbone_features_5_token_mixer_0_conv1 = nn.Conv2d(bias=True, dilation=(1,1), groups=128, in_channels=128, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.batchnorm_19 = nn.BatchNorm2d(affine=True, eps=0.000010, num_features=128)
        self.segmentor_backbone_features_5_token_mixer_1_fc1 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(1,1), out_channels=32, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.segmentor_backbone_features_5_token_mixer_1_act = nn.ReLU()
        self.segmentor_backbone_features_5_token_mixer_1_fc2 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=32, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.convbn2d_16 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.segmentor_backbone_features_5_channel_mixer_m_1 = nn.GELU()
        self.convbn2d_17 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.convbn2d_18 = nn.Conv2d(bias=True, dilation=(1,1), groups=128, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.segmentor_backbone_features_6_token_mixer_0_conv1 = nn.Conv2d(bias=True, dilation=(1,1), groups=128, in_channels=128, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.batchnorm_23 = nn.BatchNorm2d(affine=True, eps=0.000010, num_features=128)
        self.convbn2d_19 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.segmentor_backbone_features_6_channel_mixer_m_1 = nn.GELU()
        self.convbn2d_20 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.convbn2d_21 = nn.Conv2d(bias=True, dilation=(1,1), groups=128, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.segmentor_backbone_features_7_token_mixer_0_conv1 = nn.Conv2d(bias=True, dilation=(1,1), groups=128, in_channels=128, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.batchnorm_27 = nn.BatchNorm2d(affine=True, eps=0.000010, num_features=128)
        self.convbn2d_22 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.segmentor_backbone_features_7_channel_mixer_m_1 = nn.GELU()
        self.convbn2d_23 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.convbn2d_24 = nn.Conv2d(bias=True, dilation=(1,1), groups=128, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(2,2))
        self.convbn2d_25 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.convbn2d_26 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=512, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.segmentor_backbone_features_8_channel_mixer_m_1 = nn.GELU()
        self.convbn2d_27 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=512, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.convbn2d_28 = nn.Conv2d(bias=True, dilation=(1,1), groups=256, in_channels=256, kernel_size=(3,3), out_channels=256, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.segmentor_backbone_features_9_token_mixer_0_conv1 = nn.Conv2d(bias=True, dilation=(1,1), groups=256, in_channels=256, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.batchnorm_35 = nn.BatchNorm2d(affine=True, eps=0.000010, num_features=256)
        self.segmentor_backbone_features_9_token_mixer_1_fc1 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=64, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.segmentor_backbone_features_9_token_mixer_1_act = nn.ReLU()
        self.segmentor_backbone_features_9_token_mixer_1_fc2 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.convbn2d_29 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=512, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.segmentor_backbone_features_9_channel_mixer_m_1 = nn.GELU()
        self.convbn2d_30 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=512, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.convbn2d_31 = nn.Conv2d(bias=True, dilation=(1,1), groups=256, in_channels=256, kernel_size=(3,3), out_channels=256, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.segmentor_backbone_features_10_token_mixer_0_conv1 = nn.Conv2d(bias=True, dilation=(1,1), groups=256, in_channels=256, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.batchnorm_39 = nn.BatchNorm2d(affine=True, eps=0.000010, num_features=256)
        self.convbn2d_32 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=512, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.segmentor_backbone_features_10_channel_mixer_m_1 = nn.GELU()
        self.convbn2d_33 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=512, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.convbn2d_34 = nn.Conv2d(bias=True, dilation=(1,1), groups=256, in_channels=256, kernel_size=(3,3), out_channels=256, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.segmentor_backbone_features_11_token_mixer_0_conv1 = nn.Conv2d(bias=True, dilation=(1,1), groups=256, in_channels=256, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.batchnorm_43 = nn.BatchNorm2d(affine=True, eps=0.000010, num_features=256)
        self.segmentor_backbone_features_11_token_mixer_1_fc1 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=64, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.segmentor_backbone_features_11_token_mixer_1_act = nn.ReLU()
        self.segmentor_backbone_features_11_token_mixer_1_fc2 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.convbn2d_35 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=512, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.segmentor_backbone_features_11_channel_mixer_m_1 = nn.GELU()
        self.convbn2d_36 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=512, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.convbn2d_37 = nn.Conv2d(bias=True, dilation=(1,1), groups=256, in_channels=256, kernel_size=(3,3), out_channels=256, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.segmentor_backbone_features_12_token_mixer_0_conv1 = nn.Conv2d(bias=True, dilation=(1,1), groups=256, in_channels=256, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.batchnorm_47 = nn.BatchNorm2d(affine=True, eps=0.000010, num_features=256)
        self.convbn2d_38 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=512, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.segmentor_backbone_features_12_channel_mixer_m_1 = nn.GELU()
        self.convbn2d_39 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=512, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.convbn2d_40 = nn.Conv2d(bias=True, dilation=(1,1), groups=256, in_channels=256, kernel_size=(3,3), out_channels=256, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.segmentor_backbone_features_13_token_mixer_0_conv1 = nn.Conv2d(bias=True, dilation=(1,1), groups=256, in_channels=256, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.batchnorm_51 = nn.BatchNorm2d(affine=True, eps=0.000010, num_features=256)
        self.segmentor_backbone_features_13_token_mixer_1_fc1 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=64, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.segmentor_backbone_features_13_token_mixer_1_act = nn.ReLU()
        self.segmentor_backbone_features_13_token_mixer_1_fc2 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.convbn2d_41 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=512, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.segmentor_backbone_features_13_channel_mixer_m_1 = nn.GELU()
        self.convbn2d_42 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=512, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.convbn2d_43 = nn.Conv2d(bias=True, dilation=(1,1), groups=256, in_channels=256, kernel_size=(3,3), out_channels=256, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.segmentor_backbone_features_14_token_mixer_0_conv1 = nn.Conv2d(bias=True, dilation=(1,1), groups=256, in_channels=256, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.batchnorm_55 = nn.BatchNorm2d(affine=True, eps=0.000010, num_features=256)
        self.convbn2d_44 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=512, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.segmentor_backbone_features_14_channel_mixer_m_1 = nn.GELU()
        self.convbn2d_45 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=512, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.convbn2d_46 = nn.Conv2d(bias=True, dilation=(1,1), groups=256, in_channels=256, kernel_size=(3,3), out_channels=256, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.segmentor_backbone_features_15_token_mixer_0_conv1 = nn.Conv2d(bias=True, dilation=(1,1), groups=256, in_channels=256, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.batchnorm_59 = nn.BatchNorm2d(affine=True, eps=0.000010, num_features=256)
        self.segmentor_backbone_features_15_token_mixer_1_fc1 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=64, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.segmentor_backbone_features_15_token_mixer_1_act = nn.ReLU()
        self.segmentor_backbone_features_15_token_mixer_1_fc2 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.convbn2d_47 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=512, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.segmentor_backbone_features_15_channel_mixer_m_1 = nn.GELU()
        self.convbn2d_48 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=512, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.convbn2d_49 = nn.Conv2d(bias=True, dilation=(1,1), groups=256, in_channels=256, kernel_size=(3,3), out_channels=256, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.segmentor_backbone_features_16_token_mixer_0_conv1 = nn.Conv2d(bias=True, dilation=(1,1), groups=256, in_channels=256, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.batchnorm_63 = nn.BatchNorm2d(affine=True, eps=0.000010, num_features=256)
        self.convbn2d_50 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=512, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.segmentor_backbone_features_16_channel_mixer_m_1 = nn.GELU()
        self.convbn2d_51 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=512, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.convbn2d_52 = nn.Conv2d(bias=True, dilation=(1,1), groups=256, in_channels=256, kernel_size=(3,3), out_channels=256, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.segmentor_backbone_features_17_token_mixer_0_conv1 = nn.Conv2d(bias=True, dilation=(1,1), groups=256, in_channels=256, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.batchnorm_67 = nn.BatchNorm2d(affine=True, eps=0.000010, num_features=256)
        self.segmentor_backbone_features_17_token_mixer_1_fc1 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=64, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.segmentor_backbone_features_17_token_mixer_1_act = nn.ReLU()
        self.segmentor_backbone_features_17_token_mixer_1_fc2 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.convbn2d_53 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=512, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.segmentor_backbone_features_17_channel_mixer_m_1 = nn.GELU()
        self.convbn2d_54 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=512, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.convbn2d_55 = nn.Conv2d(bias=True, dilation=(1,1), groups=256, in_channels=256, kernel_size=(3,3), out_channels=256, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.segmentor_backbone_features_18_token_mixer_0_conv1 = nn.Conv2d(bias=True, dilation=(1,1), groups=256, in_channels=256, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.batchnorm_71 = nn.BatchNorm2d(affine=True, eps=0.000010, num_features=256)
        self.convbn2d_56 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=512, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.segmentor_backbone_features_18_channel_mixer_m_1 = nn.GELU()
        self.convbn2d_57 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=512, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.convbn2d_58 = nn.Conv2d(bias=True, dilation=(1,1), groups=256, in_channels=256, kernel_size=(3,3), out_channels=256, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.segmentor_backbone_features_19_token_mixer_0_conv1 = nn.Conv2d(bias=True, dilation=(1,1), groups=256, in_channels=256, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.batchnorm_75 = nn.BatchNorm2d(affine=True, eps=0.000010, num_features=256)
        self.segmentor_backbone_features_19_token_mixer_1_fc1 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=64, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.segmentor_backbone_features_19_token_mixer_1_act = nn.ReLU()
        self.segmentor_backbone_features_19_token_mixer_1_fc2 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.convbn2d_59 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=512, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.segmentor_backbone_features_19_channel_mixer_m_1 = nn.GELU()
        self.convbn2d_60 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=512, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.convbn2d_61 = nn.Conv2d(bias=True, dilation=(1,1), groups=256, in_channels=256, kernel_size=(3,3), out_channels=256, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.segmentor_backbone_features_20_token_mixer_0_conv1 = nn.Conv2d(bias=True, dilation=(1,1), groups=256, in_channels=256, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.batchnorm_79 = nn.BatchNorm2d(affine=True, eps=0.000010, num_features=256)
        self.convbn2d_62 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=512, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.segmentor_backbone_features_20_channel_mixer_m_1 = nn.GELU()
        self.convbn2d_63 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=512, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.convbn2d_64 = nn.Conv2d(bias=True, dilation=(1,1), groups=256, in_channels=256, kernel_size=(3,3), out_channels=256, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.segmentor_backbone_features_21_token_mixer_0_conv1 = nn.Conv2d(bias=True, dilation=(1,1), groups=256, in_channels=256, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.batchnorm_83 = nn.BatchNorm2d(affine=True, eps=0.000010, num_features=256)
        self.convbn2d_65 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=512, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.segmentor_backbone_features_21_channel_mixer_m_1 = nn.GELU()
        self.convbn2d_66 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=512, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.convbn2d_67 = nn.Conv2d(bias=True, dilation=(1,1), groups=256, in_channels=256, kernel_size=(3,3), out_channels=256, padding=(1,1), padding_mode='zeros', stride=(2,2))
        self.convbn2d_68 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=512, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.convbn2d_69 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=512, kernel_size=(1,1), out_channels=1024, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.segmentor_backbone_features_22_channel_mixer_m_1 = nn.GELU()
        self.convbn2d_70 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=1024, kernel_size=(1,1), out_channels=512, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.convbn2d_71 = nn.Conv2d(bias=True, dilation=(1,1), groups=512, in_channels=512, kernel_size=(3,3), out_channels=512, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.segmentor_backbone_features_23_token_mixer_0_conv1 = nn.Conv2d(bias=True, dilation=(1,1), groups=512, in_channels=512, kernel_size=(1,1), out_channels=512, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.batchnorm_91 = nn.BatchNorm2d(affine=True, eps=0.000010, num_features=512)
        self.segmentor_backbone_features_23_token_mixer_1_fc1 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=512, kernel_size=(1,1), out_channels=128, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.segmentor_backbone_features_23_token_mixer_1_act = nn.ReLU()
        self.segmentor_backbone_features_23_token_mixer_1_fc2 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(1,1), out_channels=512, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.convbn2d_72 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=512, kernel_size=(1,1), out_channels=1024, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.segmentor_backbone_features_23_channel_mixer_m_1 = nn.GELU()
        self.convbn2d_73 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=1024, kernel_size=(1,1), out_channels=512, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.convbn2d_74 = nn.Conv2d(bias=True, dilation=(1,1), groups=512, in_channels=512, kernel_size=(3,3), out_channels=512, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.segmentor_backbone_features_24_token_mixer_0_conv1 = nn.Conv2d(bias=True, dilation=(1,1), groups=512, in_channels=512, kernel_size=(1,1), out_channels=512, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.batchnorm_95 = nn.BatchNorm2d(affine=True, eps=0.000010, num_features=512)
        self.convbn2d_75 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=512, kernel_size=(1,1), out_channels=1024, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.segmentor_backbone_features_24_channel_mixer_m_1 = nn.GELU()
        self.convbn2d_76 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=1024, kernel_size=(1,1), out_channels=512, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.segmentor_neck_lateral_convs_0_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=64, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.segmentor_neck_lateral_convs_1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.segmentor_neck_lateral_convs_2_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.segmentor_neck_lateral_convs_3_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=512, kernel_size=(1,1), out_channels=256, padding=(0,0), padding_mode='zeros', stride=(1,1))
        self.segmentor_neck_fpn_convs_0_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(3,3), out_channels=256, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.segmentor_neck_fpn_convs_1_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(3,3), out_channels=256, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.segmentor_neck_fpn_convs_2_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(3,3), out_channels=256, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.segmentor_neck_fpn_convs_3_conv = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(3,3), out_channels=256, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.convbn2d_77 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.segmentor_decode_head_scale_heads_0_0_activate = nn.ReLU()
        self.convbn2d_78 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.segmentor_decode_head_scale_heads_1_0_activate = nn.ReLU()
        self.convbn2d_79 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.segmentor_decode_head_scale_heads_2_0_activate = nn.ReLU()
        self.convbn2d_80 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.segmentor_decode_head_scale_heads_2_2_activate = nn.ReLU()
        self.convbn2d_81 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=256, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.segmentor_decode_head_scale_heads_3_0_activate = nn.ReLU()
        self.convbn2d_82 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.segmentor_decode_head_scale_heads_3_2_activate = nn.ReLU()
        self.convbn2d_83 = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(3,3), out_channels=128, padding=(1,1), padding_mode='zeros', stride=(1,1))
        self.segmentor_decode_head_scale_heads_3_4_activate = nn.ReLU()
        self.segmentor_decode_head_conv_seg = nn.Conv2d(bias=True, dilation=(1,1), groups=1, in_channels=128, kernel_size=(1,1), out_channels=2, padding=(0,0), padding_mode='zeros', stride=(1,1))

        archive = zipfile.ZipFile('tools/pnnx/fpn_repvit.pnnx.bin', 'r')
        self.convbn2d_0.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_0.bias', (32), 'float32')
        self.convbn2d_0.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_0.weight', (32,3,3,3), 'float32')
        self.convbn2d_1.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_1.bias', (64), 'float32')
        self.convbn2d_1.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_1.weight', (64,32,3,3), 'float32')
        self.convbn2d_2.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_2.bias', (64), 'float32')
        self.convbn2d_2.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_2.weight', (64,1,3,3), 'float32')
        self.segmentor_backbone_features_1_token_mixer_0_conv1.bias = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.1.token_mixer.0.conv1.bias', (64), 'float32')
        self.segmentor_backbone_features_1_token_mixer_0_conv1.weight = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.1.token_mixer.0.conv1.weight', (64,1,1,1), 'float32')
        self.batchnorm_3.bias = self.load_pnnx_bin_as_parameter(archive, 'batchnorm_3.bias', (64), 'float32')
        self.batchnorm_3.running_mean = self.load_pnnx_bin_as_tensor(archive, 'batchnorm_3.running_mean', (64), 'float32')
        self.batchnorm_3.running_var = self.load_pnnx_bin_as_tensor(archive, 'batchnorm_3.running_var', (64), 'float32')
        self.batchnorm_3.weight = self.load_pnnx_bin_as_parameter(archive, 'batchnorm_3.weight', (64), 'float32')
        self.segmentor_backbone_features_1_token_mixer_1_fc1.bias = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.1.token_mixer.1.fc1.bias', (16), 'float32')
        self.segmentor_backbone_features_1_token_mixer_1_fc1.weight = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.1.token_mixer.1.fc1.weight', (16,64,1,1), 'float32')
        self.segmentor_backbone_features_1_token_mixer_1_fc2.bias = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.1.token_mixer.1.fc2.bias', (64), 'float32')
        self.segmentor_backbone_features_1_token_mixer_1_fc2.weight = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.1.token_mixer.1.fc2.weight', (64,16,1,1), 'float32')
        self.convbn2d_3.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_3.bias', (128), 'float32')
        self.convbn2d_3.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_3.weight', (128,64,1,1), 'float32')
        self.convbn2d_4.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_4.bias', (64), 'float32')
        self.convbn2d_4.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_4.weight', (64,128,1,1), 'float32')
        self.convbn2d_5.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_5.bias', (64), 'float32')
        self.convbn2d_5.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_5.weight', (64,1,3,3), 'float32')
        self.segmentor_backbone_features_2_token_mixer_0_conv1.bias = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.2.token_mixer.0.conv1.bias', (64), 'float32')
        self.segmentor_backbone_features_2_token_mixer_0_conv1.weight = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.2.token_mixer.0.conv1.weight', (64,1,1,1), 'float32')
        self.batchnorm_7.bias = self.load_pnnx_bin_as_parameter(archive, 'batchnorm_7.bias', (64), 'float32')
        self.batchnorm_7.running_mean = self.load_pnnx_bin_as_tensor(archive, 'batchnorm_7.running_mean', (64), 'float32')
        self.batchnorm_7.running_var = self.load_pnnx_bin_as_tensor(archive, 'batchnorm_7.running_var', (64), 'float32')
        self.batchnorm_7.weight = self.load_pnnx_bin_as_parameter(archive, 'batchnorm_7.weight', (64), 'float32')
        self.convbn2d_6.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_6.bias', (128), 'float32')
        self.convbn2d_6.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_6.weight', (128,64,1,1), 'float32')
        self.convbn2d_7.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_7.bias', (64), 'float32')
        self.convbn2d_7.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_7.weight', (64,128,1,1), 'float32')
        self.convbn2d_8.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_8.bias', (64), 'float32')
        self.convbn2d_8.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_8.weight', (64,1,3,3), 'float32')
        self.segmentor_backbone_features_3_token_mixer_0_conv1.bias = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.3.token_mixer.0.conv1.bias', (64), 'float32')
        self.segmentor_backbone_features_3_token_mixer_0_conv1.weight = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.3.token_mixer.0.conv1.weight', (64,1,1,1), 'float32')
        self.batchnorm_11.bias = self.load_pnnx_bin_as_parameter(archive, 'batchnorm_11.bias', (64), 'float32')
        self.batchnorm_11.running_mean = self.load_pnnx_bin_as_tensor(archive, 'batchnorm_11.running_mean', (64), 'float32')
        self.batchnorm_11.running_var = self.load_pnnx_bin_as_tensor(archive, 'batchnorm_11.running_var', (64), 'float32')
        self.batchnorm_11.weight = self.load_pnnx_bin_as_parameter(archive, 'batchnorm_11.weight', (64), 'float32')
        self.convbn2d_9.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_9.bias', (128), 'float32')
        self.convbn2d_9.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_9.weight', (128,64,1,1), 'float32')
        self.convbn2d_10.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_10.bias', (64), 'float32')
        self.convbn2d_10.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_10.weight', (64,128,1,1), 'float32')
        self.convbn2d_11.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_11.bias', (64), 'float32')
        self.convbn2d_11.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_11.weight', (64,1,3,3), 'float32')
        self.convbn2d_12.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_12.bias', (128), 'float32')
        self.convbn2d_12.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_12.weight', (128,64,1,1), 'float32')
        self.convbn2d_13.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_13.bias', (256), 'float32')
        self.convbn2d_13.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_13.weight', (256,128,1,1), 'float32')
        self.convbn2d_14.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_14.bias', (128), 'float32')
        self.convbn2d_14.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_14.weight', (128,256,1,1), 'float32')
        self.convbn2d_15.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_15.bias', (128), 'float32')
        self.convbn2d_15.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_15.weight', (128,1,3,3), 'float32')
        self.segmentor_backbone_features_5_token_mixer_0_conv1.bias = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.5.token_mixer.0.conv1.bias', (128), 'float32')
        self.segmentor_backbone_features_5_token_mixer_0_conv1.weight = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.5.token_mixer.0.conv1.weight', (128,1,1,1), 'float32')
        self.batchnorm_19.bias = self.load_pnnx_bin_as_parameter(archive, 'batchnorm_19.bias', (128), 'float32')
        self.batchnorm_19.running_mean = self.load_pnnx_bin_as_tensor(archive, 'batchnorm_19.running_mean', (128), 'float32')
        self.batchnorm_19.running_var = self.load_pnnx_bin_as_tensor(archive, 'batchnorm_19.running_var', (128), 'float32')
        self.batchnorm_19.weight = self.load_pnnx_bin_as_parameter(archive, 'batchnorm_19.weight', (128), 'float32')
        self.segmentor_backbone_features_5_token_mixer_1_fc1.bias = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.5.token_mixer.1.fc1.bias', (32), 'float32')
        self.segmentor_backbone_features_5_token_mixer_1_fc1.weight = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.5.token_mixer.1.fc1.weight', (32,128,1,1), 'float32')
        self.segmentor_backbone_features_5_token_mixer_1_fc2.bias = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.5.token_mixer.1.fc2.bias', (128), 'float32')
        self.segmentor_backbone_features_5_token_mixer_1_fc2.weight = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.5.token_mixer.1.fc2.weight', (128,32,1,1), 'float32')
        self.convbn2d_16.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_16.bias', (256), 'float32')
        self.convbn2d_16.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_16.weight', (256,128,1,1), 'float32')
        self.convbn2d_17.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_17.bias', (128), 'float32')
        self.convbn2d_17.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_17.weight', (128,256,1,1), 'float32')
        self.convbn2d_18.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_18.bias', (128), 'float32')
        self.convbn2d_18.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_18.weight', (128,1,3,3), 'float32')
        self.segmentor_backbone_features_6_token_mixer_0_conv1.bias = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.6.token_mixer.0.conv1.bias', (128), 'float32')
        self.segmentor_backbone_features_6_token_mixer_0_conv1.weight = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.6.token_mixer.0.conv1.weight', (128,1,1,1), 'float32')
        self.batchnorm_23.bias = self.load_pnnx_bin_as_parameter(archive, 'batchnorm_23.bias', (128), 'float32')
        self.batchnorm_23.running_mean = self.load_pnnx_bin_as_tensor(archive, 'batchnorm_23.running_mean', (128), 'float32')
        self.batchnorm_23.running_var = self.load_pnnx_bin_as_tensor(archive, 'batchnorm_23.running_var', (128), 'float32')
        self.batchnorm_23.weight = self.load_pnnx_bin_as_parameter(archive, 'batchnorm_23.weight', (128), 'float32')
        self.convbn2d_19.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_19.bias', (256), 'float32')
        self.convbn2d_19.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_19.weight', (256,128,1,1), 'float32')
        self.convbn2d_20.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_20.bias', (128), 'float32')
        self.convbn2d_20.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_20.weight', (128,256,1,1), 'float32')
        self.convbn2d_21.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_21.bias', (128), 'float32')
        self.convbn2d_21.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_21.weight', (128,1,3,3), 'float32')
        self.segmentor_backbone_features_7_token_mixer_0_conv1.bias = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.7.token_mixer.0.conv1.bias', (128), 'float32')
        self.segmentor_backbone_features_7_token_mixer_0_conv1.weight = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.7.token_mixer.0.conv1.weight', (128,1,1,1), 'float32')
        self.batchnorm_27.bias = self.load_pnnx_bin_as_parameter(archive, 'batchnorm_27.bias', (128), 'float32')
        self.batchnorm_27.running_mean = self.load_pnnx_bin_as_tensor(archive, 'batchnorm_27.running_mean', (128), 'float32')
        self.batchnorm_27.running_var = self.load_pnnx_bin_as_tensor(archive, 'batchnorm_27.running_var', (128), 'float32')
        self.batchnorm_27.weight = self.load_pnnx_bin_as_parameter(archive, 'batchnorm_27.weight', (128), 'float32')
        self.convbn2d_22.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_22.bias', (256), 'float32')
        self.convbn2d_22.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_22.weight', (256,128,1,1), 'float32')
        self.convbn2d_23.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_23.bias', (128), 'float32')
        self.convbn2d_23.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_23.weight', (128,256,1,1), 'float32')
        self.convbn2d_24.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_24.bias', (128), 'float32')
        self.convbn2d_24.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_24.weight', (128,1,3,3), 'float32')
        self.convbn2d_25.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_25.bias', (256), 'float32')
        self.convbn2d_25.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_25.weight', (256,128,1,1), 'float32')
        self.convbn2d_26.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_26.bias', (512), 'float32')
        self.convbn2d_26.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_26.weight', (512,256,1,1), 'float32')
        self.convbn2d_27.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_27.bias', (256), 'float32')
        self.convbn2d_27.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_27.weight', (256,512,1,1), 'float32')
        self.convbn2d_28.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_28.bias', (256), 'float32')
        self.convbn2d_28.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_28.weight', (256,1,3,3), 'float32')
        self.segmentor_backbone_features_9_token_mixer_0_conv1.bias = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.9.token_mixer.0.conv1.bias', (256), 'float32')
        self.segmentor_backbone_features_9_token_mixer_0_conv1.weight = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.9.token_mixer.0.conv1.weight', (256,1,1,1), 'float32')
        self.batchnorm_35.bias = self.load_pnnx_bin_as_parameter(archive, 'batchnorm_35.bias', (256), 'float32')
        self.batchnorm_35.running_mean = self.load_pnnx_bin_as_tensor(archive, 'batchnorm_35.running_mean', (256), 'float32')
        self.batchnorm_35.running_var = self.load_pnnx_bin_as_tensor(archive, 'batchnorm_35.running_var', (256), 'float32')
        self.batchnorm_35.weight = self.load_pnnx_bin_as_parameter(archive, 'batchnorm_35.weight', (256), 'float32')
        self.segmentor_backbone_features_9_token_mixer_1_fc1.bias = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.9.token_mixer.1.fc1.bias', (64), 'float32')
        self.segmentor_backbone_features_9_token_mixer_1_fc1.weight = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.9.token_mixer.1.fc1.weight', (64,256,1,1), 'float32')
        self.segmentor_backbone_features_9_token_mixer_1_fc2.bias = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.9.token_mixer.1.fc2.bias', (256), 'float32')
        self.segmentor_backbone_features_9_token_mixer_1_fc2.weight = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.9.token_mixer.1.fc2.weight', (256,64,1,1), 'float32')
        self.convbn2d_29.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_29.bias', (512), 'float32')
        self.convbn2d_29.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_29.weight', (512,256,1,1), 'float32')
        self.convbn2d_30.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_30.bias', (256), 'float32')
        self.convbn2d_30.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_30.weight', (256,512,1,1), 'float32')
        self.convbn2d_31.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_31.bias', (256), 'float32')
        self.convbn2d_31.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_31.weight', (256,1,3,3), 'float32')
        self.segmentor_backbone_features_10_token_mixer_0_conv1.bias = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.10.token_mixer.0.conv1.bias', (256), 'float32')
        self.segmentor_backbone_features_10_token_mixer_0_conv1.weight = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.10.token_mixer.0.conv1.weight', (256,1,1,1), 'float32')
        self.batchnorm_39.bias = self.load_pnnx_bin_as_parameter(archive, 'batchnorm_39.bias', (256), 'float32')
        self.batchnorm_39.running_mean = self.load_pnnx_bin_as_tensor(archive, 'batchnorm_39.running_mean', (256), 'float32')
        self.batchnorm_39.running_var = self.load_pnnx_bin_as_tensor(archive, 'batchnorm_39.running_var', (256), 'float32')
        self.batchnorm_39.weight = self.load_pnnx_bin_as_parameter(archive, 'batchnorm_39.weight', (256), 'float32')
        self.convbn2d_32.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_32.bias', (512), 'float32')
        self.convbn2d_32.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_32.weight', (512,256,1,1), 'float32')
        self.convbn2d_33.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_33.bias', (256), 'float32')
        self.convbn2d_33.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_33.weight', (256,512,1,1), 'float32')
        self.convbn2d_34.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_34.bias', (256), 'float32')
        self.convbn2d_34.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_34.weight', (256,1,3,3), 'float32')
        self.segmentor_backbone_features_11_token_mixer_0_conv1.bias = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.11.token_mixer.0.conv1.bias', (256), 'float32')
        self.segmentor_backbone_features_11_token_mixer_0_conv1.weight = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.11.token_mixer.0.conv1.weight', (256,1,1,1), 'float32')
        self.batchnorm_43.bias = self.load_pnnx_bin_as_parameter(archive, 'batchnorm_43.bias', (256), 'float32')
        self.batchnorm_43.running_mean = self.load_pnnx_bin_as_tensor(archive, 'batchnorm_43.running_mean', (256), 'float32')
        self.batchnorm_43.running_var = self.load_pnnx_bin_as_tensor(archive, 'batchnorm_43.running_var', (256), 'float32')
        self.batchnorm_43.weight = self.load_pnnx_bin_as_parameter(archive, 'batchnorm_43.weight', (256), 'float32')
        self.segmentor_backbone_features_11_token_mixer_1_fc1.bias = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.11.token_mixer.1.fc1.bias', (64), 'float32')
        self.segmentor_backbone_features_11_token_mixer_1_fc1.weight = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.11.token_mixer.1.fc1.weight', (64,256,1,1), 'float32')
        self.segmentor_backbone_features_11_token_mixer_1_fc2.bias = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.11.token_mixer.1.fc2.bias', (256), 'float32')
        self.segmentor_backbone_features_11_token_mixer_1_fc2.weight = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.11.token_mixer.1.fc2.weight', (256,64,1,1), 'float32')
        self.convbn2d_35.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_35.bias', (512), 'float32')
        self.convbn2d_35.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_35.weight', (512,256,1,1), 'float32')
        self.convbn2d_36.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_36.bias', (256), 'float32')
        self.convbn2d_36.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_36.weight', (256,512,1,1), 'float32')
        self.convbn2d_37.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_37.bias', (256), 'float32')
        self.convbn2d_37.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_37.weight', (256,1,3,3), 'float32')
        self.segmentor_backbone_features_12_token_mixer_0_conv1.bias = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.12.token_mixer.0.conv1.bias', (256), 'float32')
        self.segmentor_backbone_features_12_token_mixer_0_conv1.weight = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.12.token_mixer.0.conv1.weight', (256,1,1,1), 'float32')
        self.batchnorm_47.bias = self.load_pnnx_bin_as_parameter(archive, 'batchnorm_47.bias', (256), 'float32')
        self.batchnorm_47.running_mean = self.load_pnnx_bin_as_tensor(archive, 'batchnorm_47.running_mean', (256), 'float32')
        self.batchnorm_47.running_var = self.load_pnnx_bin_as_tensor(archive, 'batchnorm_47.running_var', (256), 'float32')
        self.batchnorm_47.weight = self.load_pnnx_bin_as_parameter(archive, 'batchnorm_47.weight', (256), 'float32')
        self.convbn2d_38.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_38.bias', (512), 'float32')
        self.convbn2d_38.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_38.weight', (512,256,1,1), 'float32')
        self.convbn2d_39.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_39.bias', (256), 'float32')
        self.convbn2d_39.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_39.weight', (256,512,1,1), 'float32')
        self.convbn2d_40.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_40.bias', (256), 'float32')
        self.convbn2d_40.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_40.weight', (256,1,3,3), 'float32')
        self.segmentor_backbone_features_13_token_mixer_0_conv1.bias = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.13.token_mixer.0.conv1.bias', (256), 'float32')
        self.segmentor_backbone_features_13_token_mixer_0_conv1.weight = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.13.token_mixer.0.conv1.weight', (256,1,1,1), 'float32')
        self.batchnorm_51.bias = self.load_pnnx_bin_as_parameter(archive, 'batchnorm_51.bias', (256), 'float32')
        self.batchnorm_51.running_mean = self.load_pnnx_bin_as_tensor(archive, 'batchnorm_51.running_mean', (256), 'float32')
        self.batchnorm_51.running_var = self.load_pnnx_bin_as_tensor(archive, 'batchnorm_51.running_var', (256), 'float32')
        self.batchnorm_51.weight = self.load_pnnx_bin_as_parameter(archive, 'batchnorm_51.weight', (256), 'float32')
        self.segmentor_backbone_features_13_token_mixer_1_fc1.bias = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.13.token_mixer.1.fc1.bias', (64), 'float32')
        self.segmentor_backbone_features_13_token_mixer_1_fc1.weight = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.13.token_mixer.1.fc1.weight', (64,256,1,1), 'float32')
        self.segmentor_backbone_features_13_token_mixer_1_fc2.bias = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.13.token_mixer.1.fc2.bias', (256), 'float32')
        self.segmentor_backbone_features_13_token_mixer_1_fc2.weight = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.13.token_mixer.1.fc2.weight', (256,64,1,1), 'float32')
        self.convbn2d_41.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_41.bias', (512), 'float32')
        self.convbn2d_41.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_41.weight', (512,256,1,1), 'float32')
        self.convbn2d_42.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_42.bias', (256), 'float32')
        self.convbn2d_42.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_42.weight', (256,512,1,1), 'float32')
        self.convbn2d_43.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_43.bias', (256), 'float32')
        self.convbn2d_43.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_43.weight', (256,1,3,3), 'float32')
        self.segmentor_backbone_features_14_token_mixer_0_conv1.bias = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.14.token_mixer.0.conv1.bias', (256), 'float32')
        self.segmentor_backbone_features_14_token_mixer_0_conv1.weight = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.14.token_mixer.0.conv1.weight', (256,1,1,1), 'float32')
        self.batchnorm_55.bias = self.load_pnnx_bin_as_parameter(archive, 'batchnorm_55.bias', (256), 'float32')
        self.batchnorm_55.running_mean = self.load_pnnx_bin_as_tensor(archive, 'batchnorm_55.running_mean', (256), 'float32')
        self.batchnorm_55.running_var = self.load_pnnx_bin_as_tensor(archive, 'batchnorm_55.running_var', (256), 'float32')
        self.batchnorm_55.weight = self.load_pnnx_bin_as_parameter(archive, 'batchnorm_55.weight', (256), 'float32')
        self.convbn2d_44.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_44.bias', (512), 'float32')
        self.convbn2d_44.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_44.weight', (512,256,1,1), 'float32')
        self.convbn2d_45.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_45.bias', (256), 'float32')
        self.convbn2d_45.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_45.weight', (256,512,1,1), 'float32')
        self.convbn2d_46.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_46.bias', (256), 'float32')
        self.convbn2d_46.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_46.weight', (256,1,3,3), 'float32')
        self.segmentor_backbone_features_15_token_mixer_0_conv1.bias = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.15.token_mixer.0.conv1.bias', (256), 'float32')
        self.segmentor_backbone_features_15_token_mixer_0_conv1.weight = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.15.token_mixer.0.conv1.weight', (256,1,1,1), 'float32')
        self.batchnorm_59.bias = self.load_pnnx_bin_as_parameter(archive, 'batchnorm_59.bias', (256), 'float32')
        self.batchnorm_59.running_mean = self.load_pnnx_bin_as_tensor(archive, 'batchnorm_59.running_mean', (256), 'float32')
        self.batchnorm_59.running_var = self.load_pnnx_bin_as_tensor(archive, 'batchnorm_59.running_var', (256), 'float32')
        self.batchnorm_59.weight = self.load_pnnx_bin_as_parameter(archive, 'batchnorm_59.weight', (256), 'float32')
        self.segmentor_backbone_features_15_token_mixer_1_fc1.bias = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.15.token_mixer.1.fc1.bias', (64), 'float32')
        self.segmentor_backbone_features_15_token_mixer_1_fc1.weight = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.15.token_mixer.1.fc1.weight', (64,256,1,1), 'float32')
        self.segmentor_backbone_features_15_token_mixer_1_fc2.bias = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.15.token_mixer.1.fc2.bias', (256), 'float32')
        self.segmentor_backbone_features_15_token_mixer_1_fc2.weight = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.15.token_mixer.1.fc2.weight', (256,64,1,1), 'float32')
        self.convbn2d_47.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_47.bias', (512), 'float32')
        self.convbn2d_47.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_47.weight', (512,256,1,1), 'float32')
        self.convbn2d_48.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_48.bias', (256), 'float32')
        self.convbn2d_48.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_48.weight', (256,512,1,1), 'float32')
        self.convbn2d_49.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_49.bias', (256), 'float32')
        self.convbn2d_49.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_49.weight', (256,1,3,3), 'float32')
        self.segmentor_backbone_features_16_token_mixer_0_conv1.bias = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.16.token_mixer.0.conv1.bias', (256), 'float32')
        self.segmentor_backbone_features_16_token_mixer_0_conv1.weight = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.16.token_mixer.0.conv1.weight', (256,1,1,1), 'float32')
        self.batchnorm_63.bias = self.load_pnnx_bin_as_parameter(archive, 'batchnorm_63.bias', (256), 'float32')
        self.batchnorm_63.running_mean = self.load_pnnx_bin_as_tensor(archive, 'batchnorm_63.running_mean', (256), 'float32')
        self.batchnorm_63.running_var = self.load_pnnx_bin_as_tensor(archive, 'batchnorm_63.running_var', (256), 'float32')
        self.batchnorm_63.weight = self.load_pnnx_bin_as_parameter(archive, 'batchnorm_63.weight', (256), 'float32')
        self.convbn2d_50.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_50.bias', (512), 'float32')
        self.convbn2d_50.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_50.weight', (512,256,1,1), 'float32')
        self.convbn2d_51.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_51.bias', (256), 'float32')
        self.convbn2d_51.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_51.weight', (256,512,1,1), 'float32')
        self.convbn2d_52.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_52.bias', (256), 'float32')
        self.convbn2d_52.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_52.weight', (256,1,3,3), 'float32')
        self.segmentor_backbone_features_17_token_mixer_0_conv1.bias = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.17.token_mixer.0.conv1.bias', (256), 'float32')
        self.segmentor_backbone_features_17_token_mixer_0_conv1.weight = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.17.token_mixer.0.conv1.weight', (256,1,1,1), 'float32')
        self.batchnorm_67.bias = self.load_pnnx_bin_as_parameter(archive, 'batchnorm_67.bias', (256), 'float32')
        self.batchnorm_67.running_mean = self.load_pnnx_bin_as_tensor(archive, 'batchnorm_67.running_mean', (256), 'float32')
        self.batchnorm_67.running_var = self.load_pnnx_bin_as_tensor(archive, 'batchnorm_67.running_var', (256), 'float32')
        self.batchnorm_67.weight = self.load_pnnx_bin_as_parameter(archive, 'batchnorm_67.weight', (256), 'float32')
        self.segmentor_backbone_features_17_token_mixer_1_fc1.bias = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.17.token_mixer.1.fc1.bias', (64), 'float32')
        self.segmentor_backbone_features_17_token_mixer_1_fc1.weight = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.17.token_mixer.1.fc1.weight', (64,256,1,1), 'float32')
        self.segmentor_backbone_features_17_token_mixer_1_fc2.bias = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.17.token_mixer.1.fc2.bias', (256), 'float32')
        self.segmentor_backbone_features_17_token_mixer_1_fc2.weight = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.17.token_mixer.1.fc2.weight', (256,64,1,1), 'float32')
        self.convbn2d_53.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_53.bias', (512), 'float32')
        self.convbn2d_53.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_53.weight', (512,256,1,1), 'float32')
        self.convbn2d_54.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_54.bias', (256), 'float32')
        self.convbn2d_54.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_54.weight', (256,512,1,1), 'float32')
        self.convbn2d_55.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_55.bias', (256), 'float32')
        self.convbn2d_55.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_55.weight', (256,1,3,3), 'float32')
        self.segmentor_backbone_features_18_token_mixer_0_conv1.bias = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.18.token_mixer.0.conv1.bias', (256), 'float32')
        self.segmentor_backbone_features_18_token_mixer_0_conv1.weight = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.18.token_mixer.0.conv1.weight', (256,1,1,1), 'float32')
        self.batchnorm_71.bias = self.load_pnnx_bin_as_parameter(archive, 'batchnorm_71.bias', (256), 'float32')
        self.batchnorm_71.running_mean = self.load_pnnx_bin_as_tensor(archive, 'batchnorm_71.running_mean', (256), 'float32')
        self.batchnorm_71.running_var = self.load_pnnx_bin_as_tensor(archive, 'batchnorm_71.running_var', (256), 'float32')
        self.batchnorm_71.weight = self.load_pnnx_bin_as_parameter(archive, 'batchnorm_71.weight', (256), 'float32')
        self.convbn2d_56.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_56.bias', (512), 'float32')
        self.convbn2d_56.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_56.weight', (512,256,1,1), 'float32')
        self.convbn2d_57.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_57.bias', (256), 'float32')
        self.convbn2d_57.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_57.weight', (256,512,1,1), 'float32')
        self.convbn2d_58.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_58.bias', (256), 'float32')
        self.convbn2d_58.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_58.weight', (256,1,3,3), 'float32')
        self.segmentor_backbone_features_19_token_mixer_0_conv1.bias = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.19.token_mixer.0.conv1.bias', (256), 'float32')
        self.segmentor_backbone_features_19_token_mixer_0_conv1.weight = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.19.token_mixer.0.conv1.weight', (256,1,1,1), 'float32')
        self.batchnorm_75.bias = self.load_pnnx_bin_as_parameter(archive, 'batchnorm_75.bias', (256), 'float32')
        self.batchnorm_75.running_mean = self.load_pnnx_bin_as_tensor(archive, 'batchnorm_75.running_mean', (256), 'float32')
        self.batchnorm_75.running_var = self.load_pnnx_bin_as_tensor(archive, 'batchnorm_75.running_var', (256), 'float32')
        self.batchnorm_75.weight = self.load_pnnx_bin_as_parameter(archive, 'batchnorm_75.weight', (256), 'float32')
        self.segmentor_backbone_features_19_token_mixer_1_fc1.bias = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.19.token_mixer.1.fc1.bias', (64), 'float32')
        self.segmentor_backbone_features_19_token_mixer_1_fc1.weight = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.19.token_mixer.1.fc1.weight', (64,256,1,1), 'float32')
        self.segmentor_backbone_features_19_token_mixer_1_fc2.bias = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.19.token_mixer.1.fc2.bias', (256), 'float32')
        self.segmentor_backbone_features_19_token_mixer_1_fc2.weight = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.19.token_mixer.1.fc2.weight', (256,64,1,1), 'float32')
        self.convbn2d_59.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_59.bias', (512), 'float32')
        self.convbn2d_59.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_59.weight', (512,256,1,1), 'float32')
        self.convbn2d_60.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_60.bias', (256), 'float32')
        self.convbn2d_60.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_60.weight', (256,512,1,1), 'float32')
        self.convbn2d_61.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_61.bias', (256), 'float32')
        self.convbn2d_61.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_61.weight', (256,1,3,3), 'float32')
        self.segmentor_backbone_features_20_token_mixer_0_conv1.bias = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.20.token_mixer.0.conv1.bias', (256), 'float32')
        self.segmentor_backbone_features_20_token_mixer_0_conv1.weight = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.20.token_mixer.0.conv1.weight', (256,1,1,1), 'float32')
        self.batchnorm_79.bias = self.load_pnnx_bin_as_parameter(archive, 'batchnorm_79.bias', (256), 'float32')
        self.batchnorm_79.running_mean = self.load_pnnx_bin_as_tensor(archive, 'batchnorm_79.running_mean', (256), 'float32')
        self.batchnorm_79.running_var = self.load_pnnx_bin_as_tensor(archive, 'batchnorm_79.running_var', (256), 'float32')
        self.batchnorm_79.weight = self.load_pnnx_bin_as_parameter(archive, 'batchnorm_79.weight', (256), 'float32')
        self.convbn2d_62.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_62.bias', (512), 'float32')
        self.convbn2d_62.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_62.weight', (512,256,1,1), 'float32')
        self.convbn2d_63.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_63.bias', (256), 'float32')
        self.convbn2d_63.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_63.weight', (256,512,1,1), 'float32')
        self.convbn2d_64.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_64.bias', (256), 'float32')
        self.convbn2d_64.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_64.weight', (256,1,3,3), 'float32')
        self.segmentor_backbone_features_21_token_mixer_0_conv1.bias = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.21.token_mixer.0.conv1.bias', (256), 'float32')
        self.segmentor_backbone_features_21_token_mixer_0_conv1.weight = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.21.token_mixer.0.conv1.weight', (256,1,1,1), 'float32')
        self.batchnorm_83.bias = self.load_pnnx_bin_as_parameter(archive, 'batchnorm_83.bias', (256), 'float32')
        self.batchnorm_83.running_mean = self.load_pnnx_bin_as_tensor(archive, 'batchnorm_83.running_mean', (256), 'float32')
        self.batchnorm_83.running_var = self.load_pnnx_bin_as_tensor(archive, 'batchnorm_83.running_var', (256), 'float32')
        self.batchnorm_83.weight = self.load_pnnx_bin_as_parameter(archive, 'batchnorm_83.weight', (256), 'float32')
        self.convbn2d_65.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_65.bias', (512), 'float32')
        self.convbn2d_65.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_65.weight', (512,256,1,1), 'float32')
        self.convbn2d_66.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_66.bias', (256), 'float32')
        self.convbn2d_66.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_66.weight', (256,512,1,1), 'float32')
        self.convbn2d_67.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_67.bias', (256), 'float32')
        self.convbn2d_67.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_67.weight', (256,1,3,3), 'float32')
        self.convbn2d_68.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_68.bias', (512), 'float32')
        self.convbn2d_68.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_68.weight', (512,256,1,1), 'float32')
        self.convbn2d_69.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_69.bias', (1024), 'float32')
        self.convbn2d_69.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_69.weight', (1024,512,1,1), 'float32')
        self.convbn2d_70.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_70.bias', (512), 'float32')
        self.convbn2d_70.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_70.weight', (512,1024,1,1), 'float32')
        self.convbn2d_71.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_71.bias', (512), 'float32')
        self.convbn2d_71.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_71.weight', (512,1,3,3), 'float32')
        self.segmentor_backbone_features_23_token_mixer_0_conv1.bias = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.23.token_mixer.0.conv1.bias', (512), 'float32')
        self.segmentor_backbone_features_23_token_mixer_0_conv1.weight = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.23.token_mixer.0.conv1.weight', (512,1,1,1), 'float32')
        self.batchnorm_91.bias = self.load_pnnx_bin_as_parameter(archive, 'batchnorm_91.bias', (512), 'float32')
        self.batchnorm_91.running_mean = self.load_pnnx_bin_as_tensor(archive, 'batchnorm_91.running_mean', (512), 'float32')
        self.batchnorm_91.running_var = self.load_pnnx_bin_as_tensor(archive, 'batchnorm_91.running_var', (512), 'float32')
        self.batchnorm_91.weight = self.load_pnnx_bin_as_parameter(archive, 'batchnorm_91.weight', (512), 'float32')
        self.segmentor_backbone_features_23_token_mixer_1_fc1.bias = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.23.token_mixer.1.fc1.bias', (128), 'float32')
        self.segmentor_backbone_features_23_token_mixer_1_fc1.weight = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.23.token_mixer.1.fc1.weight', (128,512,1,1), 'float32')
        self.segmentor_backbone_features_23_token_mixer_1_fc2.bias = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.23.token_mixer.1.fc2.bias', (512), 'float32')
        self.segmentor_backbone_features_23_token_mixer_1_fc2.weight = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.23.token_mixer.1.fc2.weight', (512,128,1,1), 'float32')
        self.convbn2d_72.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_72.bias', (1024), 'float32')
        self.convbn2d_72.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_72.weight', (1024,512,1,1), 'float32')
        self.convbn2d_73.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_73.bias', (512), 'float32')
        self.convbn2d_73.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_73.weight', (512,1024,1,1), 'float32')
        self.convbn2d_74.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_74.bias', (512), 'float32')
        self.convbn2d_74.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_74.weight', (512,1,3,3), 'float32')
        self.segmentor_backbone_features_24_token_mixer_0_conv1.bias = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.24.token_mixer.0.conv1.bias', (512), 'float32')
        self.segmentor_backbone_features_24_token_mixer_0_conv1.weight = self.load_pnnx_bin_as_parameter(archive, 'segmentor.backbone.features.24.token_mixer.0.conv1.weight', (512,1,1,1), 'float32')
        self.batchnorm_95.bias = self.load_pnnx_bin_as_parameter(archive, 'batchnorm_95.bias', (512), 'float32')
        self.batchnorm_95.running_mean = self.load_pnnx_bin_as_tensor(archive, 'batchnorm_95.running_mean', (512), 'float32')
        self.batchnorm_95.running_var = self.load_pnnx_bin_as_tensor(archive, 'batchnorm_95.running_var', (512), 'float32')
        self.batchnorm_95.weight = self.load_pnnx_bin_as_parameter(archive, 'batchnorm_95.weight', (512), 'float32')
        self.convbn2d_75.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_75.bias', (1024), 'float32')
        self.convbn2d_75.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_75.weight', (1024,512,1,1), 'float32')
        self.convbn2d_76.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_76.bias', (512), 'float32')
        self.convbn2d_76.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_76.weight', (512,1024,1,1), 'float32')
        self.segmentor_neck_lateral_convs_0_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'segmentor.neck.lateral_convs.0.conv.bias', (256), 'float32')
        self.segmentor_neck_lateral_convs_0_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'segmentor.neck.lateral_convs.0.conv.weight', (256,64,1,1), 'float32')
        self.segmentor_neck_lateral_convs_1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'segmentor.neck.lateral_convs.1.conv.bias', (256), 'float32')
        self.segmentor_neck_lateral_convs_1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'segmentor.neck.lateral_convs.1.conv.weight', (256,128,1,1), 'float32')
        self.segmentor_neck_lateral_convs_2_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'segmentor.neck.lateral_convs.2.conv.bias', (256), 'float32')
        self.segmentor_neck_lateral_convs_2_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'segmentor.neck.lateral_convs.2.conv.weight', (256,256,1,1), 'float32')
        self.segmentor_neck_lateral_convs_3_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'segmentor.neck.lateral_convs.3.conv.bias', (256), 'float32')
        self.segmentor_neck_lateral_convs_3_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'segmentor.neck.lateral_convs.3.conv.weight', (256,512,1,1), 'float32')
        self.segmentor_neck_fpn_convs_0_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'segmentor.neck.fpn_convs.0.conv.bias', (256), 'float32')
        self.segmentor_neck_fpn_convs_0_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'segmentor.neck.fpn_convs.0.conv.weight', (256,256,3,3), 'float32')
        self.segmentor_neck_fpn_convs_1_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'segmentor.neck.fpn_convs.1.conv.bias', (256), 'float32')
        self.segmentor_neck_fpn_convs_1_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'segmentor.neck.fpn_convs.1.conv.weight', (256,256,3,3), 'float32')
        self.segmentor_neck_fpn_convs_2_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'segmentor.neck.fpn_convs.2.conv.bias', (256), 'float32')
        self.segmentor_neck_fpn_convs_2_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'segmentor.neck.fpn_convs.2.conv.weight', (256,256,3,3), 'float32')
        self.segmentor_neck_fpn_convs_3_conv.bias = self.load_pnnx_bin_as_parameter(archive, 'segmentor.neck.fpn_convs.3.conv.bias', (256), 'float32')
        self.segmentor_neck_fpn_convs_3_conv.weight = self.load_pnnx_bin_as_parameter(archive, 'segmentor.neck.fpn_convs.3.conv.weight', (256,256,3,3), 'float32')
        self.convbn2d_77.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_77.bias', (128), 'float32')
        self.convbn2d_77.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_77.weight', (128,256,3,3), 'float32')
        self.convbn2d_78.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_78.bias', (128), 'float32')
        self.convbn2d_78.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_78.weight', (128,256,3,3), 'float32')
        self.convbn2d_79.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_79.bias', (128), 'float32')
        self.convbn2d_79.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_79.weight', (128,256,3,3), 'float32')
        self.convbn2d_80.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_80.bias', (128), 'float32')
        self.convbn2d_80.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_80.weight', (128,128,3,3), 'float32')
        self.convbn2d_81.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_81.bias', (128), 'float32')
        self.convbn2d_81.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_81.weight', (128,256,3,3), 'float32')
        self.convbn2d_82.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_82.bias', (128), 'float32')
        self.convbn2d_82.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_82.weight', (128,128,3,3), 'float32')
        self.convbn2d_83.bias = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_83.bias', (128), 'float32')
        self.convbn2d_83.weight = self.load_pnnx_bin_as_parameter(archive, 'convbn2d_83.weight', (128,128,3,3), 'float32')
        self.segmentor_decode_head_conv_seg.bias = self.load_pnnx_bin_as_parameter(archive, 'segmentor.decode_head.conv_seg.bias', (2), 'float32')
        self.segmentor_decode_head_conv_seg.weight = self.load_pnnx_bin_as_parameter(archive, 'segmentor.decode_head.conv_seg.weight', (2,128,1,1), 'float32')
        archive.close()

    def load_pnnx_bin_as_parameter(self, archive, key, shape, dtype, requires_grad=True):
        return nn.Parameter(self.load_pnnx_bin_as_tensor(archive, key, shape, dtype), requires_grad)

    def load_pnnx_bin_as_tensor(self, archive, key, shape, dtype):
        fd, tmppath = tempfile.mkstemp()
        with os.fdopen(fd, 'wb') as tmpf, archive.open(key) as keyfile:
            tmpf.write(keyfile.read())
        m = np.memmap(tmppath, dtype=dtype, mode='r', shape=shape).copy()
        os.remove(tmppath)
        return torch.from_numpy(m)

    def forward(self, v_0):
        v_1 = self.convbn2d_0(v_0)
        v_2 = self.segmentor_backbone_features_0_1(v_1)
        v_3 = self.convbn2d_1(v_2)
        v_4 = self.convbn2d_2(v_3)
        v_5 = self.segmentor_backbone_features_1_token_mixer_0_conv1(v_3)
        v_6 = ((v_4 + v_5) + v_3)
        v_7 = self.batchnorm_3(v_6)
        v_8 = torch.mean(input=v_7, dim=(2,3), keepdim=True)
        v_9 = self.segmentor_backbone_features_1_token_mixer_1_fc1(v_8)
        v_10 = self.segmentor_backbone_features_1_token_mixer_1_act(v_9)
        v_11 = self.segmentor_backbone_features_1_token_mixer_1_fc2(v_10)
        v_12 = F.sigmoid(input=v_11)
        v_13 = (v_7 * v_12)
        v_14 = self.convbn2d_3(v_13)
        v_15 = self.segmentor_backbone_features_1_channel_mixer_m_1(v_14)
        v_16 = self.convbn2d_4(v_15)
        v_17 = (v_13 + v_16)
        v_18 = self.convbn2d_5(v_17)
        v_19 = self.segmentor_backbone_features_2_token_mixer_0_conv1(v_17)
        v_20 = ((v_18 + v_19) + v_17)
        v_21 = self.batchnorm_7(v_20)
        v_22 = self.convbn2d_6(v_21)
        v_23 = self.segmentor_backbone_features_2_channel_mixer_m_1(v_22)
        v_24 = self.convbn2d_7(v_23)
        v_25 = (v_21 + v_24)
        v_26 = self.convbn2d_8(v_25)
        v_27 = self.segmentor_backbone_features_3_token_mixer_0_conv1(v_25)
        v_28 = ((v_26 + v_27) + v_25)
        v_29 = self.batchnorm_11(v_28)
        v_30 = self.convbn2d_9(v_29)
        v_31 = self.segmentor_backbone_features_3_channel_mixer_m_1(v_30)
        v_32 = self.convbn2d_10(v_31)
        v_33 = (v_29 + v_32)
        v_34 = self.convbn2d_11(v_33)
        v_35 = self.convbn2d_12(v_34)
        v_36 = self.convbn2d_13(v_35)
        v_37 = self.segmentor_backbone_features_4_channel_mixer_m_1(v_36)
        v_38 = self.convbn2d_14(v_37)
        v_39 = (v_35 + v_38)
        v_40 = self.convbn2d_15(v_39)
        v_41 = self.segmentor_backbone_features_5_token_mixer_0_conv1(v_39)
        v_42 = ((v_40 + v_41) + v_39)
        v_43 = self.batchnorm_19(v_42)
        v_44 = torch.mean(input=v_43, dim=(2,3), keepdim=True)
        v_45 = self.segmentor_backbone_features_5_token_mixer_1_fc1(v_44)
        v_46 = self.segmentor_backbone_features_5_token_mixer_1_act(v_45)
        v_47 = self.segmentor_backbone_features_5_token_mixer_1_fc2(v_46)
        v_48 = F.sigmoid(input=v_47)
        v_49 = (v_43 * v_48)
        v_50 = self.convbn2d_16(v_49)
        v_51 = self.segmentor_backbone_features_5_channel_mixer_m_1(v_50)
        v_52 = self.convbn2d_17(v_51)
        v_53 = (v_49 + v_52)
        v_54 = self.convbn2d_18(v_53)
        v_55 = self.segmentor_backbone_features_6_token_mixer_0_conv1(v_53)
        v_56 = ((v_54 + v_55) + v_53)
        v_57 = self.batchnorm_23(v_56)
        v_58 = self.convbn2d_19(v_57)
        v_59 = self.segmentor_backbone_features_6_channel_mixer_m_1(v_58)
        v_60 = self.convbn2d_20(v_59)
        v_61 = (v_57 + v_60)
        v_62 = self.convbn2d_21(v_61)
        v_63 = self.segmentor_backbone_features_7_token_mixer_0_conv1(v_61)
        v_64 = ((v_62 + v_63) + v_61)
        v_65 = self.batchnorm_27(v_64)
        v_66 = self.convbn2d_22(v_65)
        v_67 = self.segmentor_backbone_features_7_channel_mixer_m_1(v_66)
        v_68 = self.convbn2d_23(v_67)
        v_69 = (v_65 + v_68)
        v_70 = self.convbn2d_24(v_69)
        v_71 = self.convbn2d_25(v_70)
        v_72 = self.convbn2d_26(v_71)
        v_73 = self.segmentor_backbone_features_8_channel_mixer_m_1(v_72)
        v_74 = self.convbn2d_27(v_73)
        v_75 = (v_71 + v_74)
        v_76 = self.convbn2d_28(v_75)
        v_77 = self.segmentor_backbone_features_9_token_mixer_0_conv1(v_75)
        v_78 = ((v_76 + v_77) + v_75)
        v_79 = self.batchnorm_35(v_78)
        v_80 = torch.mean(input=v_79, dim=(2,3), keepdim=True)
        v_81 = self.segmentor_backbone_features_9_token_mixer_1_fc1(v_80)
        v_82 = self.segmentor_backbone_features_9_token_mixer_1_act(v_81)
        v_83 = self.segmentor_backbone_features_9_token_mixer_1_fc2(v_82)
        v_84 = F.sigmoid(input=v_83)
        v_85 = (v_79 * v_84)
        v_86 = self.convbn2d_29(v_85)
        v_87 = self.segmentor_backbone_features_9_channel_mixer_m_1(v_86)
        v_88 = self.convbn2d_30(v_87)
        v_89 = (v_85 + v_88)
        v_90 = self.convbn2d_31(v_89)
        v_91 = self.segmentor_backbone_features_10_token_mixer_0_conv1(v_89)
        v_92 = ((v_90 + v_91) + v_89)
        v_93 = self.batchnorm_39(v_92)
        v_94 = self.convbn2d_32(v_93)
        v_95 = self.segmentor_backbone_features_10_channel_mixer_m_1(v_94)
        v_96 = self.convbn2d_33(v_95)
        v_97 = (v_93 + v_96)
        v_98 = self.convbn2d_34(v_97)
        v_99 = self.segmentor_backbone_features_11_token_mixer_0_conv1(v_97)
        v_100 = ((v_98 + v_99) + v_97)
        v_101 = self.batchnorm_43(v_100)
        v_102 = torch.mean(input=v_101, dim=(2,3), keepdim=True)
        v_103 = self.segmentor_backbone_features_11_token_mixer_1_fc1(v_102)
        v_104 = self.segmentor_backbone_features_11_token_mixer_1_act(v_103)
        v_105 = self.segmentor_backbone_features_11_token_mixer_1_fc2(v_104)
        v_106 = F.sigmoid(input=v_105)
        v_107 = (v_101 * v_106)
        v_108 = self.convbn2d_35(v_107)
        v_109 = self.segmentor_backbone_features_11_channel_mixer_m_1(v_108)
        v_110 = self.convbn2d_36(v_109)
        v_111 = (v_107 + v_110)
        v_112 = self.convbn2d_37(v_111)
        v_113 = self.segmentor_backbone_features_12_token_mixer_0_conv1(v_111)
        v_114 = ((v_112 + v_113) + v_111)
        v_115 = self.batchnorm_47(v_114)
        v_116 = self.convbn2d_38(v_115)
        v_117 = self.segmentor_backbone_features_12_channel_mixer_m_1(v_116)
        v_118 = self.convbn2d_39(v_117)
        v_119 = (v_115 + v_118)
        v_120 = self.convbn2d_40(v_119)
        v_121 = self.segmentor_backbone_features_13_token_mixer_0_conv1(v_119)
        v_122 = ((v_120 + v_121) + v_119)
        v_123 = self.batchnorm_51(v_122)
        v_124 = torch.mean(input=v_123, dim=(2,3), keepdim=True)
        v_125 = self.segmentor_backbone_features_13_token_mixer_1_fc1(v_124)
        v_126 = self.segmentor_backbone_features_13_token_mixer_1_act(v_125)
        v_127 = self.segmentor_backbone_features_13_token_mixer_1_fc2(v_126)
        v_128 = F.sigmoid(input=v_127)
        v_129 = (v_123 * v_128)
        v_130 = self.convbn2d_41(v_129)
        v_131 = self.segmentor_backbone_features_13_channel_mixer_m_1(v_130)
        v_132 = self.convbn2d_42(v_131)
        v_133 = (v_129 + v_132)
        v_134 = self.convbn2d_43(v_133)
        v_135 = self.segmentor_backbone_features_14_token_mixer_0_conv1(v_133)
        v_136 = ((v_134 + v_135) + v_133)
        v_137 = self.batchnorm_55(v_136)
        v_138 = self.convbn2d_44(v_137)
        v_139 = self.segmentor_backbone_features_14_channel_mixer_m_1(v_138)
        v_140 = self.convbn2d_45(v_139)
        v_141 = (v_137 + v_140)
        v_142 = self.convbn2d_46(v_141)
        v_143 = self.segmentor_backbone_features_15_token_mixer_0_conv1(v_141)
        v_144 = ((v_142 + v_143) + v_141)
        v_145 = self.batchnorm_59(v_144)
        v_146 = torch.mean(input=v_145, dim=(2,3), keepdim=True)
        v_147 = self.segmentor_backbone_features_15_token_mixer_1_fc1(v_146)
        v_148 = self.segmentor_backbone_features_15_token_mixer_1_act(v_147)
        v_149 = self.segmentor_backbone_features_15_token_mixer_1_fc2(v_148)
        v_150 = F.sigmoid(input=v_149)
        v_151 = (v_145 * v_150)
        v_152 = self.convbn2d_47(v_151)
        v_153 = self.segmentor_backbone_features_15_channel_mixer_m_1(v_152)
        v_154 = self.convbn2d_48(v_153)
        v_155 = (v_151 + v_154)
        v_156 = self.convbn2d_49(v_155)
        v_157 = self.segmentor_backbone_features_16_token_mixer_0_conv1(v_155)
        v_158 = ((v_156 + v_157) + v_155)
        v_159 = self.batchnorm_63(v_158)
        v_160 = self.convbn2d_50(v_159)
        v_161 = self.segmentor_backbone_features_16_channel_mixer_m_1(v_160)
        v_162 = self.convbn2d_51(v_161)
        v_163 = (v_159 + v_162)
        v_164 = self.convbn2d_52(v_163)
        v_165 = self.segmentor_backbone_features_17_token_mixer_0_conv1(v_163)
        v_166 = ((v_164 + v_165) + v_163)
        v_167 = self.batchnorm_67(v_166)
        v_168 = torch.mean(input=v_167, dim=(2,3), keepdim=True)
        v_169 = self.segmentor_backbone_features_17_token_mixer_1_fc1(v_168)
        v_170 = self.segmentor_backbone_features_17_token_mixer_1_act(v_169)
        v_171 = self.segmentor_backbone_features_17_token_mixer_1_fc2(v_170)
        v_172 = F.sigmoid(input=v_171)
        v_173 = (v_167 * v_172)
        v_174 = self.convbn2d_53(v_173)
        v_175 = self.segmentor_backbone_features_17_channel_mixer_m_1(v_174)
        v_176 = self.convbn2d_54(v_175)
        v_177 = (v_173 + v_176)
        v_178 = self.convbn2d_55(v_177)
        v_179 = self.segmentor_backbone_features_18_token_mixer_0_conv1(v_177)
        v_180 = ((v_178 + v_179) + v_177)
        v_181 = self.batchnorm_71(v_180)
        v_182 = self.convbn2d_56(v_181)
        v_183 = self.segmentor_backbone_features_18_channel_mixer_m_1(v_182)
        v_184 = self.convbn2d_57(v_183)
        v_185 = (v_181 + v_184)
        v_186 = self.convbn2d_58(v_185)
        v_187 = self.segmentor_backbone_features_19_token_mixer_0_conv1(v_185)
        v_188 = ((v_186 + v_187) + v_185)
        v_189 = self.batchnorm_75(v_188)
        v_190 = torch.mean(input=v_189, dim=(2,3), keepdim=True)
        v_191 = self.segmentor_backbone_features_19_token_mixer_1_fc1(v_190)
        v_192 = self.segmentor_backbone_features_19_token_mixer_1_act(v_191)
        v_193 = self.segmentor_backbone_features_19_token_mixer_1_fc2(v_192)
        v_194 = F.sigmoid(input=v_193)
        v_195 = (v_189 * v_194)
        v_196 = self.convbn2d_59(v_195)
        v_197 = self.segmentor_backbone_features_19_channel_mixer_m_1(v_196)
        v_198 = self.convbn2d_60(v_197)
        v_199 = (v_195 + v_198)
        v_200 = self.convbn2d_61(v_199)
        v_201 = self.segmentor_backbone_features_20_token_mixer_0_conv1(v_199)
        v_202 = ((v_200 + v_201) + v_199)
        v_203 = self.batchnorm_79(v_202)
        v_204 = self.convbn2d_62(v_203)
        v_205 = self.segmentor_backbone_features_20_channel_mixer_m_1(v_204)
        v_206 = self.convbn2d_63(v_205)
        v_207 = (v_203 + v_206)
        v_208 = self.convbn2d_64(v_207)
        v_209 = self.segmentor_backbone_features_21_token_mixer_0_conv1(v_207)
        v_210 = ((v_208 + v_209) + v_207)
        v_211 = self.batchnorm_83(v_210)
        v_212 = self.convbn2d_65(v_211)
        v_213 = self.segmentor_backbone_features_21_channel_mixer_m_1(v_212)
        v_214 = self.convbn2d_66(v_213)
        v_215 = (v_211 + v_214)
        v_216 = self.convbn2d_67(v_215)
        v_217 = self.convbn2d_68(v_216)
        v_218 = self.convbn2d_69(v_217)
        v_219 = self.segmentor_backbone_features_22_channel_mixer_m_1(v_218)
        v_220 = self.convbn2d_70(v_219)
        v_221 = (v_217 + v_220)
        v_222 = self.convbn2d_71(v_221)
        v_223 = self.segmentor_backbone_features_23_token_mixer_0_conv1(v_221)
        v_224 = ((v_222 + v_223) + v_221)
        v_225 = self.batchnorm_91(v_224)
        v_226 = torch.mean(input=v_225, dim=(2,3), keepdim=True)
        v_227 = self.segmentor_backbone_features_23_token_mixer_1_fc1(v_226)
        v_228 = self.segmentor_backbone_features_23_token_mixer_1_act(v_227)
        v_229 = self.segmentor_backbone_features_23_token_mixer_1_fc2(v_228)
        v_230 = F.sigmoid(input=v_229)
        v_231 = (v_225 * v_230)
        v_232 = self.convbn2d_72(v_231)
        v_233 = self.segmentor_backbone_features_23_channel_mixer_m_1(v_232)
        v_234 = self.convbn2d_73(v_233)
        v_235 = (v_231 + v_234)
        v_236 = self.convbn2d_74(v_235)
        v_237 = self.segmentor_backbone_features_24_token_mixer_0_conv1(v_235)
        v_238 = ((v_236 + v_237) + v_235)
        v_239 = self.batchnorm_95(v_238)
        v_240 = self.convbn2d_75(v_239)
        v_241 = self.segmentor_backbone_features_24_channel_mixer_m_1(v_240)
        v_242 = self.convbn2d_76(v_241)
        v_243 = (v_239 + v_242)
        v_244 = self.segmentor_neck_lateral_convs_0_conv(v_33)
        v_245 = self.segmentor_neck_lateral_convs_1_conv(v_69)
        v_246 = self.segmentor_neck_lateral_convs_2_conv(v_215)
        v_247 = self.segmentor_neck_lateral_convs_3_conv(v_243)
        v_248 = F.upsample_nearest(input=v_247, size=(32,32))
        v_249 = (v_246 + v_248)
        v_250 = F.upsample_nearest(input=v_249, size=(64,64))
        v_251 = (v_245 + v_250)
        v_252 = F.upsample_nearest(input=v_251, size=(128,128))
        v_253 = (v_244 + v_252)
        v_254 = self.segmentor_neck_fpn_convs_0_conv(v_253)
        v_255 = self.segmentor_neck_fpn_convs_1_conv(v_251)
        v_256 = self.segmentor_neck_fpn_convs_2_conv(v_249)
        v_257 = self.segmentor_neck_fpn_convs_3_conv(v_247)
        v_258 = self.convbn2d_77(v_254)
        v_259 = self.segmentor_decode_head_scale_heads_0_0_activate(v_258)
        v_260 = self.convbn2d_78(v_255)
        v_261 = self.segmentor_decode_head_scale_heads_1_0_activate(v_260)
        v_262 = F.upsample(input=v_261, align_corners=False, mode='bilinear', size=(128,128))
        v_263 = (v_259 + v_262)
        v_264 = self.convbn2d_79(v_256)
        v_265 = self.segmentor_decode_head_scale_heads_2_0_activate(v_264)
        v_266 = F.upsample(input=v_265, align_corners=False, mode='bilinear', size=(64,64))
        v_267 = self.convbn2d_80(v_266)
        v_268 = self.segmentor_decode_head_scale_heads_2_2_activate(v_267)
        v_269 = F.upsample(input=v_268, align_corners=False, mode='bilinear', size=(128,128))
        v_270 = (v_263 + v_269)
        v_271 = self.convbn2d_81(v_257)
        v_272 = self.segmentor_decode_head_scale_heads_3_0_activate(v_271)
        v_273 = F.upsample(input=v_272, align_corners=False, mode='bilinear', size=(32,32))
        v_274 = self.convbn2d_82(v_273)
        v_275 = self.segmentor_decode_head_scale_heads_3_2_activate(v_274)
        v_276 = F.upsample(input=v_275, align_corners=False, mode='bilinear', size=(64,64))
        v_277 = self.convbn2d_83(v_276)
        v_278 = self.segmentor_decode_head_scale_heads_3_4_activate(v_277)
        v_279 = F.upsample(input=v_278, align_corners=False, mode='bilinear', size=(128,128))
        v_280 = (v_270 + v_279)
        v_281 = self.segmentor_decode_head_conv_seg(v_280)
        v_282 = F.upsample(input=v_281, align_corners=False, mode='bilinear', size=(512,512))
        return v_282

def export_torchscript():
    net = Model()
    net.float()
    net.eval()

    torch.manual_seed(0)
    v_0 = torch.rand(1, 3, 512, 512, dtype=torch.float)

    mod = torch.jit.trace(net, v_0)
    mod.save("tools/pnnx/fpn_repvit_pnnx.py.pt")

def export_onnx():
    net = Model()
    net.float()
    net.eval()

    torch.manual_seed(0)
    v_0 = torch.rand(1, 3, 512, 512, dtype=torch.float)

    torch.onnx.export(net, v_0, "tools/pnnx/fpn_repvit_pnnx.py.onnx", export_params=True, operator_export_type=torch.onnx.OperatorExportTypes.ONNX_ATEN_FALLBACK, opset_version=13, input_names=['in0'], output_names=['out0'])

@torch.no_grad()
def test_inference():
    net = Model()
    net.float()
    net.eval()

    torch.manual_seed(0)
    v_0 = torch.rand(1, 3, 512, 512, dtype=torch.float)

    return net(v_0)

if __name__ == "__main__":
    print(test_inference())
